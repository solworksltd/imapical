{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///index.js","webpack:///webpack/bootstrap 48a85704adedd796b5b3","webpack:///./src/index.js","webpack:///./src/ImapIcal.js","webpack:///external \"emailjs-imap-client\"","webpack:///external \"ical-expander\""],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","value","_ImapIcal","_ImapIcal2","obj","default","opts","Error","_interopRequireDefault","_toConsumableArray","arr","Array","isArray","arr2","length","from","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","descriptor","writable","key","protoProps","staticProps","_emailjsImapClient","_emailjsImapClient2","_icalExpander","_icalExpander2","ImapIcal","host","port","auth","user","username","pass","password","mailboxBrowser","logLevel","LOG_LEVEL_NONE","clients","mailbox","Promise","resolve","reject","path","client","connect","then","selectMailbox","_this","listMailboxes","mailboxes","all","map","createMailboxClient","createdClients","_this2","close","_this3","mailboxResults","children","bodyStructure","_this4","childNodes","childNode","type","findCalAttachmentInBodyStructure","find","matchingChildNode","_this5","createMailboxClients","searchUnseenMails","clientSearchResults","getMessagesForSearchResults","clientMessages","getBodyPartsForMessages","clientsWithMessageBodyParts","getAttachmentsFromBodyParts","messageAttachments","disconnectMailboxes","messageAttachment","attachment","message","event","parseICAL","envelope","clientBodyParts","_this6","_ref","messagesWithBodyParts","messageWithBodyParts","bodyParts","encoding","part","getMessagePart","messagesPart","messagePart","bodyPart","replace","Buffer","toString","attachments","reduce","acc","concat","_this7","_ref2","messages","bodystructure","_this8","_ref3","searchResults","getMessageData","messageSequence","listMessages","join","ics","icalExpander","_icalExpander$all","events","parsedEvent","attendees","attendee","getFirstValue","organiser","organizer","description","summary","startDate","toJSDate","endDate","search","unseen"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"emailjs-imap-client\"), require(\"ical-expander\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"emailjs-imap-client\", \"ical-expander\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"imapical\"] = factory(require(\"emailjs-imap-client\"), require(\"ical-expander\"));\n\telse\n\t\troot[\"imapical\"] = factory(root[\"emailjs-imap-client\"], root[\"ical-expander\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"emailjs-imap-client\"), require(\"ical-expander\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"emailjs-imap-client\", \"ical-expander\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"imapical\"] = factory(require(\"emailjs-imap-client\"), require(\"ical-expander\"));\n\telse\n\t\troot[\"imapical\"] = factory(root[\"emailjs-imap-client\"], root[\"ical-expander\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _ImapIcal=__webpack_require__(1);var _ImapIcal2=_interopRequireDefault(_ImapIcal);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}exports.default=function(opts){if(!opts){throw new Error('Configuration expected');}return new _ImapIcal2.default(opts);};\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(exports,\"__esModule\",{value:true});var _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();var _emailjsImapClient=__webpack_require__(2);var _emailjsImapClient2=_interopRequireDefault(_emailjsImapClient);var _icalExpander=__webpack_require__(3);var _icalExpander2=_interopRequireDefault(_icalExpander);function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj};}function _toConsumableArray(arr){if(Array.isArray(arr)){for(var i=0,arr2=Array(arr.length);i<arr.length;i++){arr2[i]=arr[i];}return arr2;}else{return Array.from(arr);}}function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var ImapIcal=function(){function ImapIcal(opts){_classCallCheck(this,ImapIcal);this.opts={host:opts.host,port:opts.port,auth:{user:opts.username,pass:opts.password}};this.mailboxBrowser=new _emailjsImapClient2.default(this.opts.host,this.opts.port||this.opts,this.opts);this.mailboxBrowser.logLevel=this.mailboxBrowser.LOG_LEVEL_NONE;this.clients=[];}_createClass(ImapIcal,[{key:'createMailboxClient',value:function createMailboxClient(mailbox){var opts=this.opts;return new Promise(function(resolve,reject){if(!mailbox.path){return reject('Mailbox must include a path');}var client=new _emailjsImapClient2.default(opts.host,opts.port||opts,opts);client.logLevel=client.LOG_LEVEL_NONE;client.connect().then(function(){return client.selectMailbox(mailbox.path);}).then(function(){client.mailbox=mailbox.path;return resolve(client);});});}},{key:'createMailboxClients',value:function createMailboxClients(){var _this=this;return this.listMailboxes().then(function(mailboxes){return Promise.all(mailboxes.map(function(mailbox){return _this.createMailboxClient(mailbox);})).then(function(createdClients){_this.clients=createdClients;});});}},{key:'disconnectMailboxes',value:function disconnectMailboxes(){var _this2=this;return Promise.all(this.clients.map(function(client){return client.close();})).then(function(){return _this2.mailboxBrowser.close();});}},{key:'listMailboxes',value:function listMailboxes(){var _this3=this;return this.mailboxBrowser.connect().then(function(){return _this3.mailboxBrowser.listMailboxes().then(function(mailboxResults){return mailboxResults.children;});});}},{key:'findCalAttachmentInBodyStructure',value:function findCalAttachmentInBodyStructure(bodyStructure){var _this4=this;if(!bodyStructure.childNodes){if(bodyStructure.type&&bodyStructure.type==='text/calendar'){return bodyStructure;}return null;}var matchingChildNodes=bodyStructure.childNodes.map(function(childNode){if(childNode.type==='text/calendar'){return childNode;}else if(childNode.childNodes){return _this4.findCalAttachmentInBodyStructure(childNode);}});return matchingChildNodes.find(function(matchingChildNode){return!!matchingChildNode;});}},{key:'fetch',value:function fetch(){var _this5=this;return this.createMailboxClients().then(function(){return _this5.searchUnseenMails();}).then(function(clientSearchResults){return _this5.getMessagesForSearchResults(clientSearchResults);}).then(function(clientMessages){return _this5.getBodyPartsForMessages(clientMessages);}).then(function(clientsWithMessageBodyParts){return _this5.getAttachmentsFromBodyParts(clientsWithMessageBodyParts);}).then(function(messageAttachments){return _this5.disconnectMailboxes().then(function(){return Promise.all(messageAttachments.map(function(messageAttachment){var attachment=messageAttachment.attachment,message=messageAttachment.message;var event=_this5.parseICAL(attachment);event['message-id']=message.envelope['message-id'];return event;}));});});}},{key:'getAttachmentsFromBodyParts',value:function getAttachmentsFromBodyParts(clientBodyParts){var _this6=this;return Promise.all(clientBodyParts.map(function(_ref){var client=_ref.client,messagesWithBodyParts=_ref.messagesWithBodyParts;return Promise.all(messagesWithBodyParts.map(function(messageWithBodyParts){var message=messageWithBodyParts.message,bodyParts=messageWithBodyParts.bodyParts;var encoding=bodyParts.encoding,part=bodyParts.part;if(part){return _this6.getMessagePart(client,message,part).then(function(messagesPart){var messagePart=messagesPart[0];var bodyPart=messagePart['body['+bodyParts.part+']'];bodyPart=bodyPart.replace(/\\r\\n/g,'');if(encoding==='base64'){return{message:message,attachment:Buffer.from(bodyPart,'base64').toString()};}return bodyPart;});}/*\n            * Special case not currently handled, email body is just an attachment, need to fetch\n            */return null;}));})).then(function(attachments){return attachments.reduce(function(acc,arr){return[].concat(_toConsumableArray(acc),_toConsumableArray(arr));},[]);});}},{key:'getBodyPartsForMessages',value:function getBodyPartsForMessages(clientMessages){var _this7=this;return Promise.all(/*\n       * Every imap message has a bodystructure that is either an attachment by itself, or is a description\n       * of a set of 'parts' that form the body of the message. We need to extract those parts and identify\n       * if there is a ical attachment present.\n       *\n       * Again we need to retain the email client instance so that when we try to fetch the attachment later\n       * we have the original client for the mailbox selection.\n       */clientMessages.map(function(_ref2){var client=_ref2.client,messages=_ref2.messages;return{client:client,messagesWithBodyParts:messages.map(function(message){return{message:message,bodyParts:_this7.findCalAttachmentInBodyStructure(message.bodystructure)};})};}));}},{key:'getMessagesForSearchResults',value:function getMessagesForSearchResults(clientSearchResults){var _this8=this;return Promise.all(/*\n       * We need to maintain access to the client object for every message, because to fetch the message parts later\n       * we need to use the same client as it is configured for the mailbox to which the message belongs.\n       */clientSearchResults.map(function(_ref3){var client=_ref3.client,searchResults=_ref3.searchResults;if(searchResults.length>0){return _this8.getMessageData(client,searchResults).then(function(messages){return{client:client,messages:messages};});}return{client:client,messages:[]};}));}/*\n   * This is idempotent, fetching message headers does not change message 'seen' status, and using body.peek also\n   * prevents 'seen' status from being set\n   */},{key:'getMessageData',value:function getMessageData(client,messageSequence){return client.listMessages(client.mailbox,messageSequence.join(','),['uid','flags','envelope','bodystructure','body.peek[]']);}/*\n   * This is a non-idempotent operation, fetching a body part of a message marks the message as seen\n   */},{key:'getMessagePart',value:function getMessagePart(client,message,part){return client.listMessages(client.mailbox,message['#'],['body['+part+']']);}},{key:'parseICAL',value:function parseICAL(ics){var icalExpander=new _icalExpander2.default({ics:ics});var _icalExpander$all=icalExpander.all(),events=_icalExpander$all.events;var event=events[0];var parsedEvent={};parsedEvent.attendees=event.attendees.map(function(attendee){var attendeeValue=attendee.getFirstValue();return attendeeValue.replace('MAILTO:','');});parsedEvent.organiser=event.organizer.replace('MAILTO:','');parsedEvent.description=event.description;parsedEvent.summary=event.summary;parsedEvent.startDate=event.startDate.toJSDate();parsedEvent.endDate=event.endDate.toJSDate();return parsedEvent;}},{key:'searchUnseenMails',value:function searchUnseenMails(){return Promise.all(this.clients.map(function(client){return client.search(client.mailbox,{unseen:true}).then(function(searchResults){return{client:client,searchResults:searchResults};});}));}}]);return ImapIcal;}();exports.default=ImapIcal;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\nmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ })\n/******/ ])[\"default\"];\n});\n\n\n// WEBPACK FOOTER //\n// index.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 48a85704adedd796b5b3","import ImapIcal from './ImapIcal';\n\nexport default (opts) => {\n  if (!opts) {\n    throw new Error('Configuration expected');\n  }\n\n  return new ImapIcal(opts);\n}\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","import ImapClient from 'emailjs-imap-client';\nimport IcalExpander from 'ical-expander';\n\nclass ImapIcal {\n  constructor(opts) {\n    this.opts = {\n      host: opts.host,\n      port: opts.port,\n      auth: {\n        user: opts.username,\n        pass: opts.password,\n      },\n    };\n\n    this.mailboxBrowser = new ImapClient(this.opts.host, this.opts.port || this.opts, this.opts);\n    this.mailboxBrowser.logLevel = this.mailboxBrowser.LOG_LEVEL_NONE;\n\n    this.clients = [];\n  }\n\n  createMailboxClient(mailbox) {\n    const { opts } = this;\n\n    return new Promise((resolve, reject) => {\n      if (!mailbox.path) {\n        return reject('Mailbox must include a path');\n      }\n\n      const client = new ImapClient(opts.host, opts.port || opts, opts);\n      client.logLevel = client.LOG_LEVEL_NONE;\n\n      client.connect().then(() => {\n        return client.selectMailbox(mailbox.path);\n      }).then(() => {\n        client.mailbox = mailbox.path;\n        return resolve(client);\n      });\n    });\n  }\n\n  createMailboxClients() {\n    return this.listMailboxes().then((mailboxes) => {\n      return Promise.all(\n        mailboxes.map((mailbox) => {\n          return this.createMailboxClient(mailbox);\n        })\n      ).then((createdClients) => {\n        this.clients = createdClients;\n      });\n    });\n  }\n\n  disconnectMailboxes() {\n    return Promise.all(\n      this.clients.map((client) => {\n        return client.close();\n      })\n    ).then(() => {\n      return this.mailboxBrowser.close();\n    });\n  }\n\n  listMailboxes() {\n    return this.mailboxBrowser.connect().then(() => {\n      return this.mailboxBrowser.listMailboxes().then((mailboxResults) => {\n        return mailboxResults.children;\n      });\n    });\n  }\n\n  findCalAttachmentInBodyStructure(bodyStructure) {\n    if (!bodyStructure.childNodes) {\n      if (bodyStructure.type && bodyStructure.type === 'text/calendar') {\n        return bodyStructure;\n      }\n\n      return null;\n    }\n\n    const matchingChildNodes = bodyStructure.childNodes.map((childNode) => {\n      if (childNode.type === 'text/calendar') {\n        return childNode;\n      } else if (childNode.childNodes) {\n        return this.findCalAttachmentInBodyStructure(childNode);\n      }\n    });\n\n    return matchingChildNodes.find((matchingChildNode) => {\n      return !!matchingChildNode;\n    });\n  }\n\n  fetch() {\n    return this.createMailboxClients().then(() => {\n      return this.searchUnseenMails();\n    }).then((clientSearchResults) => {\n      return this.getMessagesForSearchResults(clientSearchResults);\n    }).then((clientMessages) => {\n      return this.getBodyPartsForMessages(clientMessages);\n    }).then((clientsWithMessageBodyParts) => {\n      return this.getAttachmentsFromBodyParts(clientsWithMessageBodyParts);\n    }).then((messageAttachments) => {\n      return this.disconnectMailboxes().then(() => {\n        return Promise.all(\n          messageAttachments.map((messageAttachment) => {\n            const { attachment, message } = messageAttachment;\n            const event = this.parseICAL(attachment);\n            event['message-id'] = message.envelope['message-id'];\n\n            return event;\n          })\n        );\n      });\n    });\n  }\n\n  getAttachmentsFromBodyParts(clientBodyParts) {\n    return Promise.all(\n      clientBodyParts.map(({ client, messagesWithBodyParts }) => {\n        return Promise.all(\n          messagesWithBodyParts.map((messageWithBodyParts) => {\n            const { message, bodyParts } = messageWithBodyParts;\n            const { encoding, part } = bodyParts;\n\n            if (part) {\n              return this.getMessagePart(client, message, part).then((messagesPart) => {\n                const messagePart = messagesPart[0];\n                let bodyPart = messagePart[`body[${bodyParts.part}]`];\n\n                bodyPart = bodyPart.replace(/\\r\\n/g, '');\n\n                if (encoding === 'base64') {\n                  return {\n                    message,\n                    attachment: Buffer.from(bodyPart, 'base64').toString()\n                  };\n                }\n\n                return bodyPart;\n              });\n            }\n\n            /*\n            * Special case not currently handled, email body is just an attachment, need to fetch\n            */\n            return null;\n          })\n        )\n      })\n    ).then((attachments) => {\n      return attachments.reduce((acc, arr) => [...acc, ...arr], []);\n    });\n  }\n\n  getBodyPartsForMessages(clientMessages) {\n    return Promise.all(\n      /*\n       * Every imap message has a bodystructure that is either an attachment by itself, or is a description\n       * of a set of 'parts' that form the body of the message. We need to extract those parts and identify\n       * if there is a ical attachment present.\n       *\n       * Again we need to retain the email client instance so that when we try to fetch the attachment later\n       * we have the original client for the mailbox selection.\n       */\n      clientMessages.map(({ client, messages }) => {\n        return {\n          client,\n          messagesWithBodyParts: messages.map((message) => {\n            return {\n              message,\n              bodyParts: this.findCalAttachmentInBodyStructure(message.bodystructure),\n            }\n          }),\n        };\n      })\n    );\n  }\n\n  getMessagesForSearchResults(clientSearchResults) {\n    return Promise.all(\n      /*\n       * We need to maintain access to the client object for every message, because to fetch the message parts later\n       * we need to use the same client as it is configured for the mailbox to which the message belongs.\n       */\n      clientSearchResults.map(({ client, searchResults }) => {\n        if (searchResults.length > 0) {\n          return this.getMessageData(client, searchResults).then((messages) => {\n            return {\n              client,\n              messages,\n            }\n          });\n        }\n\n        return {\n          client,\n          messages: [],\n        };\n      })\n    );\n  }\n\n  /*\n   * This is idempotent, fetching message headers does not change message 'seen' status, and using body.peek also\n   * prevents 'seen' status from being set\n   */\n  getMessageData(client, messageSequence) {\n    return client.listMessages(client.mailbox, messageSequence.join(','), ['uid', 'flags', 'envelope', 'bodystructure', 'body.peek[]']);\n  }\n\n  /*\n   * This is a non-idempotent operation, fetching a body part of a message marks the message as seen\n   */\n  getMessagePart(client, message, part) {\n    return client.listMessages(client.mailbox, message['#'], ['body[' + part + ']']);\n  }\n\n  parseICAL(ics) {\n    const icalExpander = new IcalExpander({ ics });\n    const { events } = icalExpander.all();\n    const event = events[0];\n    const parsedEvent = {};\n\n    parsedEvent.attendees = event.attendees.map((attendee) => {\n      const attendeeValue = attendee.getFirstValue();\n      return attendeeValue.replace('MAILTO:', '');\n    });\n\n    parsedEvent.organiser = event.organizer.replace('MAILTO:', '');\n    parsedEvent.description = event.description;\n    parsedEvent.summary = event.summary;\n    parsedEvent.startDate = event.startDate.toJSDate();\n    parsedEvent.endDate = event.endDate.toJSDate();\n\n    return parsedEvent;\n  }\n\n  searchUnseenMails() {\n    return Promise.all(\n      this.clients.map((client) => {\n        return client.search(client.mailbox, { unseen: true }).then((searchResults) => {\n          return {\n            client,\n            searchResults\n          };\n        });\n      })\n    );\n  }\n}\n\nexport default ImapIcal;\n\n\n\n// WEBPACK FOOTER //\n// ./src/ImapIcal.js","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"emailjs-imap-client\"\n// module id = 2\n// module chunks = 0","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"ical-expander\"\n// module id = 3\n// module chunks = 0"],"sourceRoot":""}